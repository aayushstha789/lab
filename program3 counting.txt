xml file

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="MainActivity">

    <TextView
        android:layout_width="261dp"
        android:layout_height="49dp"
        android:text="counting app"
        android:textSize="30dp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.6"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.102" />

    <TextView
        android:id="@+id/count"
        android:layout_width="137dp"
        android:layout_height="41dp"
        android:text="counting"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.262" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="start"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.414" />

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="stop"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>


main java 
package com.example.counting;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

import com.example.counting.R;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    // Declare buttons and TextView
    Button start, stop;
    TextView ctr;

    // Counter and status variables
    int counter = 8;
    boolean running = false;

    // Handler to update the UI
    Handler handler = new Handler() {
        @Override
        public void handleMessage(Message m) {
            ctr.setText(String.valueOf(m.what)); // Update TextView with counter value
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize Buttons and TextView
        start = findViewById(R.id.button);
        stop = findViewById(R.id.button2);
        ctr = findViewById(R.id.count);

        // Set listeners
        start.setOnClickListener(this);
        stop.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        // Check which button was clicked
        if (v.getId() == R.id.button) {
            counter = 0;
            running = true;
            new MyCounter().start(); // Start the thread
        } else if (v.getId() == R.id.button2) {
            running = false; // Stop the thread
        }
    }

    // Thread class for counting
    class MyCounter extends Thread {
        @Override
        public void run() {
            while (running) {
                counter++; // Increment the counter
                handler.sendEmptyMessage(counter); // Update the TextView via Handler

                try {
                    Thread.sleep(1000); // Pause for 1 second
                } catch (InterruptedException e) {
                    e.printStackTrace(); // Handle exceptions
                }
            }
        }
    }
}
